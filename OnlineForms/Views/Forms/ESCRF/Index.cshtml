@model OnlineForms.ViewModels.ESCRFViewModel
@{
    ViewBag.Title = "Employee Status Change Request";
    string[] ChangeTypes = { "New Hire", "Termination", "Change In WSI", "Name Change" };
    ViewBag.Dropdown = ChangeTypes;
    OnlineForms.Models.ESCRF.ESCRFModelDal dal = new OnlineForms.Models.ESCRF.ESCRFModelDal();
    DateTime early = DateTime.MinValue;
    ViewBag.FormInfo = new Dictionary<string, string>();
    ViewBag.FormInfo.Add("FormName", "Employee Status Change Request Form");
    ViewBag.FormInfo.Add("Division", "Human Resource Division");
    ViewBag.FormInfo.Add("Info", "Home");
}
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
</head>
<div class="row">
    @section topHeader {
        @Html.Partial("~/Views/Shared/_ESCRFHeader.cshtml", (Dictionary<string, string>)ViewBag.FormInfo)
    }
</div>
@section sideBarNav {
    @Html.Partial("~/Views/Forms/ESCRF/_Sidebar.cshtml")
}
@*start of hr zone*@
@if (ViewBag.isAdmin)
{
    <div class="mb-5 mt-0">

        <h5 class="display-5">
            @using (Html.BeginForm("ESCRFRouter", "ESCRF"))
            {
                <div class="form-control w-50">
                    @Html.DropDownListFor(m => m.ESCRFUI.ChangeTypes, new SelectList(ViewBag.Dropdown), new { @class = "form-control mb-4" })

                    <button type="submit" class="btn-dark btn" id="button">Create New Change Request</button>
                </div>
            }
        </h5>

    </div>
}
@if (Model.IndexHolder.Count != 0)
{
        <div class=" py-3">
            <div class="text-start mb-2">
                <div id="recentHeading" class="col w-100">
                    <h3>Recently Submitted Forms</h3>
                </div>
            </div>
        </div>
        <div class="d-flex w-100">
            <table class="table" id="submittedForms">
                <thead>
                    <tr>
                        <th>
                            Change Type: @Html.ActionLink(" ", "ChangeTypeSort", "ESCRF", null, new { @class = "bi bi-sort-alpha-down w-100" })
                        </th>
                        <th>
                            Employee Name:
                            @Html.ActionLink(" ", "EmployeeNameSort", "ESCRF", null, new { @class = "w-100 bi bi-sort-alpha-down" })
                        </th>
                        <th>
                            Supervisor: @Html.ActionLink(" ", "SupervisorSort", "ESCRF", null, new { @class = "w-100 bi bi-sort-alpha-down" })
                        </th>
                        <th>
                            Modified By: @Html.ActionLink(" ", "ModifiedBySort", "ESCRF", null, new { @class = "bi bi-sort-alpha-down w-100" })
                        </th>
                        <th>
                            Form Submitted On:@Html.ActionLink(" ", "SubmittedOnSort", "ESCRF", null, new { @class = "bi bi-sort-alpha-down w-100" })
                        </th>
                        <th>
                            Effective Date:@Html.ActionLink(" ", "EffectiveOnSort", "ESCRF", null, new { @class = "bi bi-sort-alpha-down w-100" })
                        </th>
                        <th>
                            Status:@Html.ActionLink(" ", "StatusSort", "ESCRF", null, new { @class = "bi bi-sort-alpha-down w-100" })
                        </th>
                        <th onclick="sortTable(7)" class="tdalign px-2" style="cursor: pointer">
                            View Form/List: <img src="~/Content/icons/sort-alpha-down.svg" />
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @for (int i = Model.ESCRFUI.Start(); i < Model.ESCRFUI.End(); i++)
                    {
                        int taskListID = Model.IndexHolder[i].TaskListID();
                       

                        if (ViewBag.IsAdmin == true || ViewBag.ITSecurity == true || ViewBag.HasTasks.Contains(Model.IndexHolder[i].TaskListID().ToString()))
                        {

                            if (taskListID != 0)
                            {
                                
                            }
                        <tr>
                            <td style="text-align: center;">
                                @Model.IndexHolder[i].ChangeType()
                            </td>
                            <td style="text-align: center;">
                                @Model.IndexHolder[i].Name()
                            </td>
                            <td style="text-align: center;">
                                @Model.IndexHolder[i].CurrentSupervisor()
                            </td>
                            <td style="text-align: center;">
                                @Model.IndexHolder[i].ModifiedBy()
                            </td>
                            <td style="text-align: center;">
                                @Model.IndexHolder[i].CreatedDate().ToShortDateString()
                            </td>
                            <td style="text-align: center;">
                                @Model.IndexHolder[i].EffectiveDate.ToShortDateString()
                            </td>
                            <td>
                                @Model.IndexHolder[i].Status()
                            </td>
                            @if (Model.IndexHolder[i].Status() == "Not Started")
                            {
                                if (ViewBag.isAdmin == true)
                                {
                                    <td style="text-align: center;">
                                        @if (Model.IndexHolder[i].ChangeType() == "New Hire")
                                        {
                                            @Html.ActionLink("View Form", "NewHireView", "ESCRF", new { id = Model.IndexHolder[i].ID() }, new { @id = "button", @class = "btn" })
                                        }
                                        @if (Model.IndexHolder[i].ChangeType() == "Termination")
                                        {
                                            @Html.ActionLink("View Form", "TerminationView", "ESCRF", new { id = Model.IndexHolder[i].ID() }, new { @id = "button", @class = "btn" })
                                        }
                                        @if (Model.IndexHolder[i].ChangeType() == "Change in WSI")
                                        {
                                            @Html.ActionLink("View Form", "ChangeView", "ESCRF", new { id = Model.IndexHolder[i].ID() }, new { @id = "button", @class = "btn" })
                                        }
                                        @if (Model.IndexHolder[i].ChangeType() == "Name Change")
                                        {
                                            @Html.ActionLink("View Form", "NameView", "ESCRF", new { id = Model.IndexHolder[i].ID() }, new { @id = "button", @class = "btn" })
                                        }
                                    </td>
                                }
                                else
                            {
                                    // Added hidden value for sorting purposes
                                <td><p hidden>0</p></td>
                            }
                            }
                            else
                            {
                                //Need to check if the form is deployed lets grab the tasklist and check
                                System.Data.DataTable dtTaskList = dal.GetTaskListInfoByID(Model.IndexHolder[i].TaskListID());
                                OnlineForms.Models.ESCRF.TaskListModel taskList = OnlineForms.Models.ESCRF.TaskListModel.ConvertDataTableToTaskList(dtTaskList);
                                if (taskList.IsDeployed)
                                {
                                    if (ViewBag.ITSecurity == true && !ViewBag.ITTasksComplete.Contains(Model.IndexHolder[i].TaskListID().ToString()))
                                    {
                        <td style="text-align: center">
                            <p hidden>Tasks Complete</p>@Html.ActionLink("Tasks Complete", "ChecklistTasks", "ESCRF", new { id = Model.IndexHolder[i].TaskListID() }, new { @id = "button", @class = "btn" })

                        </td>
                                    }
                                    else
                                    {
                                        // Added hidden text for sorting purposes
                                    <td style="text-align: center;">
                                        @if (Model.IndexHolder[i].ChangeType() == "New Hire")
                                        {
                                            <p hidden>View Checklist</p>@Html.ActionLink("View Checklist", "ChecklistTasks", "ESCRF", new { id = Model.IndexHolder[i].TaskListID() }, new { @id = "button", @class = "btn" })
                                        }
                                        @if (Model.IndexHolder[i].ChangeType() == "Termination")
                                        {
                                    <p hidden>View Checklist</p>@Html.ActionLink("View Checklist", "ChecklistTasks", "ESCRF", new { id = Model.IndexHolder[i].TaskListID() }, new { @id = "button", @class = "btn" })
                                        }
                                        @if (Model.IndexHolder[i].ChangeType() == "Change in WSI")
                                        {
                                    <p hidden>View Checklist</p>@Html.ActionLink("View Checklist", "ChecklistTasks", "ESCRF", new { id = Model.IndexHolder[i].TaskListID() }, new { @id = "button", @class = "btn" })
                                        }
                                        @if (Model.IndexHolder[i].ChangeType() == "Name Change")
                                        {
                                    <p hidden>View Checklist</p>@Html.ActionLink("View Checklist", "ChecklistTasks", "ESCRF", new { id = Model.IndexHolder[i].TaskListID() }, new { @id = "button", @class = "btn" })
                                        }
                                    </td>
                                    }
                                }
                                <td hidden>@Html.DisplayFor(m => m.NewHire.ID, new { htmlAttributes = new { @name = "ID", @class = "form-control fw-bold", @Value = Model.IndexHolder[i].ID() } })</td>
                                <td hidden>@Html.DisplayFor(m => m.NewHire.TaskListID, new { htmlAttributes = new { @name = "ID", @class = "form-control fw-bold", @Value = Model.IndexHolder[i].TaskListID() } })</td>
                            }

                       
                        </tr>
                                    }
                                }
                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-between py-5">
            <div class="mx-5">
                @if (Model.ESCRFUI.PageCount <= 0)
                {
                    @Html.ActionLink("Prev", "Previous", "ESCRF", new { @class = "btn disabled", @id = "button" })
                }
                else
                {
                    @Html.ActionLink("Prev", "Previous", "ESCRF", new { @class = "btn btn-primary", @id = "button" })
                }
            </div>
            <div class="mx-5">
                @if (Model.ESCRFUI.PageCount == Model.ESCRFUI.Pages || Model.ESCRFUI.Pages < 0)
                {

                    @Html.ActionLink("Next", "Next", "ESCRF", new { @class = "btn disabled", @id = "button" })
                }
                else
                {

                    @Html.ActionLink("Next", "Next", "ESCRF", new { @class = "btn", @id = "button" })
                }
            </div>
        </div>
    }

@*end of hr zone*@
@*@if (Model.TaskListItemHolder.Count != 0)
{
    <div class="row py-3">
        <div class="col ">
            <div id="recentHeading" class="col">
                <h3>Assigned Tasks:</h3>
            </div>
        </div>
    </div>
    <table class="my-2 table">
        <thead>
            <tr>
                <th>
                    Task List Item:
                </th>
                <th>
                    Affected Employee:
                </th>
                <th>
                    Date Created:
                </th>
                <th>
                    Accept:
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (OnlineForms.Models.ESCRFViewModel.TaskListItemModel taskListItem in Model.TaskListItemHolder)
            {
                //Grabing the tasklist that holds the TaskListItem
                System.Data.DataTable dtTaskList = dal.GetTaskListInfoByID(taskListItem.TaskListID);
                OnlineForms.Models.ESCRF.TaskListModel model = OnlineForms.Models.ESCRF.TaskListModel.ConvertDataTableToTaskList(dtTaskList);

                if (model.FinishedDate.ToShortDateString() == DateTime.MinValue.ToShortDateString())
                {
                    if (taskListItem.Deputy == ViewBag.Name || Model.departments.Contains(taskListItem.Deputy))
                    {

                        if (model.CreatedDate != early)
                        {
                            <tr>
                                @{
                                    string[] taskArray = taskListItem.Task.Split();
                                    List
                                    <string>
                                        stringList = taskArray.ToList();
                                    List<string>
                                        titleList = new List<string>
                                            ();
                                    if (stringList.Count() > 10)
                                    {
                                        titleList = stringList.GetRange(0, 10);
                                    }
                                    else
                                    {
                                        titleList = stringList.GetRange(0, stringList.Count());
                                    }
                                    string title = String.Join(" ", titleList);
                                    <td>
                                        @title
                                    </td>
                                    System.Data.DataTable dtTasklist = dal.GetTaskListInfoByID(taskListItem.TaskListID);
                                    taskList = OnlineForms.Models.ESCRF.TaskListModel.ConvertDataTableToTaskList(dtTasklist);
                                    Model.TaskList = taskList;
                                    if (taskList.ChangeType == "New Hire")
                                    {
                                        System.Data.DataTable dtNewHire = dal.GetESCRFNewHireInfoByTaskListID(taskList.ID);
                                        Model.NewHire = OnlineForms.Models.ESCRF.NewHireModel.ConvertDataTableToNewHire(dtNewHire);
                                        <td>
                                            @Model.NewHire.Name()
                                        </td>
                                    }
                                    if (taskList.ChangeType == "Termination")
                                    {
                                        System.Data.DataTable dtTerm = dal.GetESCRFTerminationInfoByTaskListID(taskList.ID);
                                        Model.Termination = OnlineForms.Models.ESCRF.TerminationModel.ConvertDataTableToTermination(dtTerm);
                                        <td>
                                            @Model.Termination.Name()
                                        </td>
                                    }
                                    if (taskList.ChangeType == "Change in WSI")
                                    {
                                        System.Data.DataTable dtChange = dal.GetESCRFChangeInfoByTaskListID(taskList.ID);
                                        Model.Change = OnlineForms.Models.ESCRF.ChangeModel.ConvertDataTableToChange(dtChange);
                                        <td>
                                            @Model.Change.Name()
                                        </td>
                                    }
                                    if (taskList.ChangeType == "Name Change")
                                    {
                                        System.Data.DataTable dtName = dal.GetESCRFNameInfoByTaskListID(taskList.ID);
                                        Model.Name = OnlineForms.Models.ESCRF.NameModel.ConvertDataTableToName(dtName);
                                        <td>
                                            @Model.Name.Name()
                                        </td>
                                    }
                                    <td>
                                        @taskList.CreatedDate.ToShortDateString()
                                    </td>
                                    if (taskListItem.SignedOn == DateTime.MinValue)
                                    {
                                        <td>
                                            @Html.ActionLink("View Task", "TaskView", "ESCRF", new { id = taskListItem.ID }, new { @id = "button", @class = "btn" })
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            Completed On: @taskListItem.SignedOn.ToShortDateString();
                                        </td>
                                    }


                                }
                            </tr>
                        }
                    }
                }

            }
        </tbody>
    </table>
}*@

<section Scripts>
    <script type="text/javascript">
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("submittedForms");
            switching = true;

            // Sort direction ascending
            dir = "asc";

            while (switching) {
                switching = false;
                rows = table.rows;

                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];

                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;

                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }

        }
    </script>


</section>
