@model  OnlineForms.ViewModels.SFN52712ViewModel


@{
    ViewBag.Title = "Authorization for Out of State Travel";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section topHeader {
    @Html.Partial("~/Views/Shared/_FormHeader.cshtml", (Dictionary<string, string>)ViewBag.FormInfo)
}

<div id="notPrint">
    <div class="container-fluid">
        <div class="row flex-nowrap">
            @section sideBarNav {
                @Html.Partial("~/Views/Forms/SFN52712/Sidebar.cshtml")
            }
        </div>
    </div>

    @using (Html.BeginForm("Print/", "SFN52712", new { id = ViewBag.ID }, FormMethod.Post, new { id = "ApprovalForm" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row row-cols-2 mb-2">
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.Name, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.Name), @id = "travelName", @Value = Model.TravelAuthoriztionModel.Name, @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Name, htmlAttributes: new { @for = "travelName", @class = "fw-bold" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.Title, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.Title), @id = "travelTitle", @Value = Model.TravelAuthoriztionModel.Title, @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Title, htmlAttributes: new { @for = "travelTitle", @class = "fw-bold" })
            </div>
        </div>

        <div class="row row-cols-2 mb-2">
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.DepartmentBudget, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.DepartmentBudget), @id = "departmentBudget", @Value = Model.TravelAuthoriztionModel.DepartmentBudget, @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.DepartmentBudget, htmlAttributes: new { @for = "departmentBudget", @class = "fw-bold" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.Email, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.Email), @id = "travelEmail", @Value = Model.TravelAuthoriztionModel.Email, @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Email, htmlAttributes: new { @for = "travelEmail", @class = "fw-bold" })
            </div>
        </div>

        <div class="row mb-2">
            <div class="col-12 fw-bold">Destination(s) (City and State)</div>
            @for (int i = 0; i < Model.SFN52712Destinations.Count; i++)
            {
                var hide = "";
                if (i > 0)
                {
                    hide = "display: block;";
                }
                else
                {
                    hide = "display: none;";
                }
                <div class="row mb-2" destination-item="@(i + 1)">
                    <div class="col-7 form-floating">
                        @Html.EditorFor(m => m.SFN52712Destination.City, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Destinations[@i].City), @id = "travelCity", @Value = Model.SFN52712Destinations[@i].City, @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Destination.City, htmlAttributes: new { @for = "travelCity", @class = "fw-bold" })
                    </div>
                    <div class="col-4 form-floating">
                        @Html.EditorFor(m => m.SFN52712Destination.State, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Destinations[@i].State), @id = "State", @Value = Model.SFN52712Destinations[@i].State, @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Destination.State, htmlAttributes: new { @for = "travelState", @class = "fw-bold" })
                    </div>
                </div>
            }
        </div>

        <div class="row row-cols-6 mb-2">
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.PreferredDepartureDate, new { htmlAttributes = new { @class = "form-control  fw-bold", @id = "preferredDepartureDate", @style = "font-size: 0.6rem", @Value = Model.TravelAuthoriztionModel.PreferredDepartureDate.ToString("yyyy-MM-dd"), @type = "date", @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.PreferredDepartureDate, htmlAttributes: new { @for = "PreferredDepartureDate", @class = "fw-bold", @style = "font-size: 0.7rem" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.EventStartDate, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.EventStartDate), @id = "EventStartDate", @style = "font-size: 0.6rem", @Value = Model.TravelAuthoriztionModel.EventStartDate.ToString("yyyy-MM-dd"), @type = "date", @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventStartDate, htmlAttributes: new { @for = "EventStartDate", @class = "fw-bold", @style = "font-size: 0.7rem" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.EventStartTime, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.EventStartTime), @id = "EventStartTime", @style = "font-size: 0.6rem", @type = "time", @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventStartTime, htmlAttributes: new { @for = "EventStartTime", @class = "fw-bold", @style = "font-size: 0.7rem" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.EventEndDate, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.EventEndDate), @id = "EventEndDate", @style = "font-size: 0.6rem", @Value = Model.TravelAuthoriztionModel.EventEndDate.ToString("yyyy-MM-dd"), @type = "date", @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventEndDate, htmlAttributes: new { @for = "EventEndDate", @class = "fw-bold", @style = "font-size: 0.7rem" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.EventEndTime, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.EventEndTime), @id = "EventEndTime", @style = "font-size: 0.6rem", @type = "time", @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventEndTime, htmlAttributes: new { @for = "EventEndTime", @class = "fw-bold", @style = "font-size: 0.7rem" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.PreferredReturnDate, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.PreferredReturnDate), @id = "PreferredReturnDate", @style = "font-size: 0.6rem", @Value = Model.TravelAuthoriztionModel.PreferredReturnDate.ToString("yyyy-MM-dd"), @type = "date", @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.PreferredReturnDate, htmlAttributes: new { @for = "PreferredReturnDate", @class = "fw-bold", @style = "font-size: 0.7rem" })
            </div>
        </div>

        <div class="row row-cols-2 mb-2">
            <div class="col form-floating">
                <div class="form-control" radio-button-control>
                    <label class="pe-4">@Html.RadioButtonFor(m => m.TravelAuthoriztionModel.IncludeVacationDays, "true", new { @readonly = "readonly" }) Yes</label>
                    <label>@Html.RadioButtonFor(m => m.TravelAuthoriztionModel.IncludeVacationDays, "false", new { @readonly = "readonly" }) No</label>
                </div>
                @Html.LabelFor(m => m.TravelAuthoriztionModel.IncludeVacationDays, htmlAttributes: new { @for = "", @class = "fw-bold req-form-long-label" })
            </div>
            <div class="col form-floating">
                @Html.EditorFor(m => m.TravelAuthoriztionModel.MethodOfTravel, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.MethodOfTravel), @id = "travelMethod", @Value = Model.TravelAuthoriztionModel.MethodOfTravel, @onChange = "otherMethod()", @readonly = "readonly" } })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.MethodOfTravel, htmlAttributes: new { @for = "travelMethod", @class = "fw-bold" })
            </div>
        </div>

        <div id="othersection" class="row row-cols-1 mb-2">
            <div class="col form-floating">
                @Html.TextArea("OtherTravel", new { @class = "form-control fw-bold", @id = "otherTravelMethod", @readonly = "readonly", style = "height: auto" })
                @Html.Label("Other Explain", htmlAttributes: new { @for = "otherTravelMethod", @class = "fw-bold" })
            </div>
        </div>

        string dob;
        if (ViewBag.FlightExist == true)
        {
            dob = Model.FlightInfo.DateofBirth.ToString("yyyy-MM-dd");
        }
        else
        {
            dob = "";
        }

        <div id="flightsection" class="row row-cols-1 mb-2 p-4">
            <div class="col form-control">
                <div class="form-control mb-1" radio-button-control>
                    @Html.LabelFor(m => m.FlightInfo.EmpBookFlight, htmlAttributes: new { @for = "", @class = "fw-bold" })
                    <label class="pe-4">@Html.RadioButtonFor(m => m.FlightInfo.EmpBookFlight, "true") Yes</label>
                    <label>@Html.RadioButtonFor(m => m.FlightInfo.EmpBookFlight, "false") No</label>
                </div>
                <div class="col form-floating mb-1">
                    @Html.EditorFor(m => m.FlightInfo.FreqFlierNumber, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.FlightInfo.FreqFlierNumber), @id = "FreqFlierNumber", @readonly = "readonly" } })
                    @Html.LabelFor(m => m.FlightInfo.FreqFlierNumber, htmlAttributes: new { @for = "", @class = "fw-bold" })
                </div>
                <div class="col form-floating mb-1">
                    @Html.EditorFor(m => m.FlightInfo.GovernemtIdName, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.FlightInfo.GovernemtIdName), @id = "GovernemtIdName", @readonly = "readonly" } })
                    @Html.LabelFor(m => m.FlightInfo.GovernemtIdName, htmlAttributes: new { @for = "", @class = "fw-bold" })
                </div>
                <div class="col form-floating mb-1">
                    @Html.EditorFor(m => m.FlightInfo.DateofBirth, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.FlightInfo.DateofBirth), @id = "DateofBirth", @Value = dob, @type = "date", @readonly = "readonly" } })
                    @Html.LabelFor(m => m.FlightInfo.DateofBirth, htmlAttributes: new { @for = "", @class = "fw-bold" })
                </div>
                <div class="col form-floating mb-1">
                    @Html.EditorFor(m => m.FlightInfo.TravelContactNumber, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.FlightInfo.TravelContactNumber), @id = "TravelContactNumber", @readonly = "readonly" } })
                    @Html.LabelFor(m => m.FlightInfo.TravelContactNumber, htmlAttributes: new { @for = "", @class = "fw-bold" })
                </div>
                <div class="col form-floating mb-1">
                    @Html.EditorFor(m => m.FlightInfo.SeatPreference, new { htmlAttributes = new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.FlightInfo.SeatPreference), @id = "SeatPreference", @readonly = "readonly" } })
                    @Html.LabelFor(m => m.FlightInfo.SeatPreference, htmlAttributes: new { @for = "", @class = "fw-bold" })
                </div>
            </div>
        </div>

        <div class="row row-cols-1 mb-2">
            <div class="col form-floating">
                @Html.TextAreaFor(m => m.TravelAuthoriztionModel.PurposeOfTrip, new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.PurposeOfTrip), @id = "PurposeOfTrip", @maxlength = "1000", style = "height: auto", @readonly = "readonly" })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.PurposeOfTrip, htmlAttributes: new { @for = "PurposeOfTrip", @class = "fw-bold" })
            </div>
        </div>

        <div class="row row-cols-1 mb-2">
            <div class="col form-floating">
                @Html.TextAreaFor(m => m.TravelAuthoriztionModel.NumberOfPersons, new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.NumberOfPersons), @id = "NumberOfPersons", @maxlength = "2000", @readonly = "readonly", style = "height: auto" })
                @Html.LabelFor(m => m.TravelAuthoriztionModel.NumberOfPersons, htmlAttributes: new { @for = "NumberOfPersons", @class = "fw-bold" })
            </div>
        </div>

        <div class="row row-cols-6 mb-1">
            <div class="col-2 text-center fw-bold req-item-form-header">
                Transportation
            </div>
            <div class="col-2 text-center fw-bold req-item-form-header">
                Per Diem
            </div>
            <div class="col-2 text-center fw-bold req-item-form-header">
                Lodging
            </div>
            <div class="col-2 text-center fw-bold req-item-form-header">
                Registration
            </div>
            <div class="col-2 text-center fw-bold req-item-form-header">
                Rental Car/Taxi
            </div>
            <div class="col-2 text-center fw-bold req-item-form-header">
                Estimated Total Cost
            </div>
        </div>

        <div class="row row-cols-6 mb-2">
            <div class="col">
                <span class="prefix fw-bold">$</span>
                @Html.EditorFor(m => m.TravelAuthoriztionModel.Transportation, new { htmlAttributes = new { @class = "form-control fw-bold text-end", @currencymask = "true", @onkeyup = "calculateTotalCost(event); return false;", @placeholder = "0.00", @id = "Transportation", @readonly = "readonly" } })
            </div>
            <div class="col">
                <span class="prefix fw-bold">$</span>
                @Html.EditorFor(m => m.TravelAuthoriztionModel.PerDiem, new { htmlAttributes = new { @class = "form-control fw-bold text-end", @currencymask = "true", @onkeyup = "calculateTotalCost(event); return false;", @placeholder = "0.00", @id = "PerDiem", @readonly = "readonly" } })
            </div>
            <div class="col">
                <span class="prefix fw-bold">$</span>
                @Html.EditorFor(m => m.TravelAuthoriztionModel.Lodging, new { htmlAttributes = new { @class = "form-control fw-bold text-end", @currencymask = "true", @onkeyup = "calculateTotalCost(event); return false;", @placeholder = "0.00", @id = "Lodging", @readonly = "readonly" } })
            </div>
            <div class="col ">
                <span class="prefix fw-bold">$</span>
                @Html.EditorFor(m => m.TravelAuthoriztionModel.Registration, new { htmlAttributes = new { @class = "form-control fw-bold text-end", @currencymask = "true", @onkeyup = "calculateTotalCost(event); return false;", @placeholder = "0.00", @id = "Registration", @readonly = "readonly" } })
            </div>
            <div class="col">
                <span class="prefix fw-bold">$</span>
                @Html.EditorFor(m => m.TravelAuthoriztionModel.RentalCarTaxi, new { htmlAttributes = new { @class = "form-control fw-bold text-end", @currencymask = "true", @onkeyup = "calculateTotalCost(event); return false;", @placeholder = "0.00", @id = "RentalCarTaxi", @readonly = "readonly" } })
            </div>
            <div class="col">
                <span class="prefix fw-bold">$</span>
                @Html.EditorFor(m => m.TravelAuthoriztionModel.EstimatedTotalCost, new { htmlAttributes = new { @class = "form-control fw-bold text-end", @currencymask = "true", @placeholder = "0.00", @id = "EstimatedTotalCost", @readonly = "readonly" } })
            </div>
        </div>
        if ((ViewBag.JobTitle == "Executive Assistant" || ViewBag.JobTitle == "HR Director" || ViewBag.JobTitle == "Procurement Officer") && Model.TravelAuthoriztionModel.FormCompleted == false)
        {
            <div class="row row-cols-1 mb-2">
                <div class="col form-floating">
                    @Html.TextAreaFor(m => m.TravelAuthoriztionModel.Comments, new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.Comments), @id = "Comments", style = "height: auto", @maxlength = "2000" })
                    @Html.LabelFor(m => m.TravelAuthoriztionModel.Comments, htmlAttributes: new { @for = "Comments", @class = "fw-bold" })
                </div>
            </div>
        }
        else
        {
            <div class="row row-cols-1 mb-2">
                <div class="col form-floating">
                    @Html.TextAreaFor(m => m.TravelAuthoriztionModel.Comments, new { @class = "form-control fw-bold", @placeholder = @Html.DisplayNameFor(m => m.TravelAuthoriztionModel.Comments), @id = "Comments", @maxlength = "2000", @readonly = "readonly" })
                    @Html.LabelFor(m => m.TravelAuthoriztionModel.Comments, htmlAttributes: new { @for = "Comments", @class = "fw-bold" })
                </div>
            </div>
        }
        <div class="row mb-1">
            <div class="col-8 form-floating">
                @Html.EditorFor(m => m.SFN52712Approvals.PersonTravelingSignature, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.PersonTravelingSignature), @id = "PersonTravelingSignature", @readonly = "readonly" } })
                @Html.LabelFor(m => m.SFN52712Approvals.PersonTravelingSignature, htmlAttributes: new { @for = "itSignature", @class = "fw-bold req-form-long-label" })
            </div>
            <div class="col-4 form-floating">
                @Html.EditorFor(m => m.SFN52712Approvals.PersonTravelingSignatureDate, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.PersonTravelingSignatureDate), @id = "PersonTravelingSignature", @type = "date", @Value = @Model.SFN52712Approvals.PersonTravelingSignatureDate.ToString("yyyy-MM-dd"), @readonly = "readonly" } })
                @Html.LabelFor(m => m.SFN52712Approvals.PersonTravelingSignatureDate, htmlAttributes: new { @for = "itSignatureDate", @class = "fw-bold" })
            </div>
        </div>
        if (Model.TravelAuthoriztionModel.FormSubmitted == true)
        {
            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.SupervisorSignature.IsEmpty())
            {
                <div class="row mb-1">
                    <div class="col-8 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.SupervisorSignature, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.SupervisorSignature), @id = "SupervisorSignature", @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.SupervisorSignature, htmlAttributes: new { @for = "itSignature", @class = "fw-bold req-form-long-label" })
                    </div>
                    <div class="col-4 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.SupervisorSignatureDate, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.SupervisorSignatureDate), @id = "SupervisorSignatureDate", @Value = Model.SFN52712Approvals.SupervisorSignatureDate.ToString("yyyy-MM-dd"), @type = "date", @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.SupervisorSignatureDate, htmlAttributes: new { @for = "itSignatureDate", @class = "fw-bold" })
                    </div>
                </div>
            }
            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DepartmentBudgetManagerSignature.IsEmpty())
            {
                <div class="row mb-1">
                    <div class="col-8 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignature, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignature), @id = "DepartmentBudgetManagerSignature", @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignature, htmlAttributes: new { @for = "DepartmentBudgetManagerSignature", @class = "fw-bold req-form-long-label" })
                    </div>
                    <div class="col-4 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignatureDate, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignatureDate), @id = "DepartmentBudgetManagerSignatureDate", @type = "date", @Value = Model.SFN52712Approvals.DepartmentBudgetManagerSignatureDate.ToString("yyyy-MM-dd"), @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignatureDate, htmlAttributes: new { @for = "DepartmentBudgetManagerSignatureDate", @class = "fw-bold" })
                    </div>
                </div>
            }

            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DivisionChiefSignature.IsEmpty())
            {
                <div class="row mb-1">
                    <div class="col-8 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DivisionChiefSignature, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DivisionChiefSignature), @id = "DivisionChiefSignature", @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DivisionChiefSignature, htmlAttributes: new { @for = "DivisionChiefSignature", @class = "fw-bold req-form-long-label" })
                    </div>
                    <div class="col-4 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DivisionChiefSignatureDate, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DivisionChiefSignatureDate), @id = "DivisionChiefSignatureDate", @type = "date", @Value = Model.SFN52712Approvals.DivisionChiefSignatureDate.ToString("yyyy-MM-dd"), @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DivisionChiefSignatureDate, htmlAttributes: new { @for = "DivisionChiefSignatureDate", @class = "fw-bold" })
                    </div>
                </div>
            }

            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DirectorofFinanceSignature.IsEmpty())
            {
                <div class="row mb-1">
                    <div class="col-8 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DirectorofFinanceSignature, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DirectorofFinanceSignature), @id = "DirectorofFinanceSignature", @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorofFinanceSignature, htmlAttributes: new { @for = "DirectorofFinanceSignature", @class = "fw-bold req-form-long-label" })
                    </div>
                    <div class="col-4 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DirectorofFinanceSignatureDate, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DirectorofFinanceSignatureDate), @id = "DirectorofFinanceSignatureDate", @type = "date", @Value = Model.SFN52712Approvals.DirectorofFinanceSignatureDate.ToString("yyyy-MM-dd"), @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorofFinanceSignatureDate, htmlAttributes: new { @for = "DirectorofFinanceSignatureDate", @class = "fw-bold" })
                    </div>
                </div>
            }

            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DirectorSignature.IsEmpty())
            {
                <div class="row mb-1">
                    <div class="col-8 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DirectorSignature, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DirectorSignature), @id = "DirectorSignature", @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorSignature, htmlAttributes: new { @for = "DirectorSignature", @class = "fw-bold req-form-long-label" })
                    </div>
                    <div class="col-4 form-floating">
                        @Html.EditorFor(m => m.SFN52712Approvals.DirectorSignatureDate, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @placeholder = @Html.DisplayNameFor(m => m.SFN52712Approvals.DirectorSignatureDate), @id = "DirectorSignatureDate", @type = "date", @Value = Model.SFN52712Approvals.DirectorSignatureDate.ToString("yyyy-MM-dd"), @readonly = "readonly" } })
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorSignatureDate, htmlAttributes: new { @for = "DirectorSignatureDate", @class = "fw-bold" })
                    </div>
                </div>
            }
            if (Model.TravelAuthoriztionModel.Name == ViewBag.UserName || ViewBag.JobTitle == "Procurement Officer")
            {

                if (!Model.TravelAuthoriztionModel.WaitingApproval.IsEmpty() && !Model.TravelAuthoriztionModel.FormDenied && Model.SFN52712Approvals.DirectorSignature.IsEmpty())
                {
                    <div class="row mb-1">
                        <div class="col-9 form-floating">
                            @Html.EditorFor(m => m.TravelAuthoriztionModel.WaitingApproval, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @Value = Model.TravelAuthoriztionModel.WaitingApproval, @id = "waitingapproval", @readonly = "readonly" } })
                            @Html.LabelFor(m => m.TravelAuthoriztionModel.WaitingApproval, htmlAttributes: new { @for = "WaitingAprroval", @class = "fw-bold" })
                        </div>
                    </div>
                }
            }
            if ((ViewBag.jobtitle == "Procurement Officer" || ViewBag.jobTitle == "Executive Assistant" || ViewBag.jobtitle == "HR Director") && (!Model.TravelAuthoriztionModel.FormDenied && Model.TravelAuthoriztionModel.FormApproved ))
            {
                <div>
                    <h5>Administration Section</h5>
                    <div class="row mb-3">
                        <div class="col-9 form-floating border check-container">
                            <br />
                            @Html.RadioButtonFor(m => m.TravelAuthoriztionModel.ProcurementProcessing, "true", new { htmlAttributes = new { @readonly = "readonly" } })<span class="checkmark" style=" top: auto; left: 30px; "></span>
                            Form is being processed by Procurement
                        </div>
                        <div class="col-3 form-floating">
                            @Html.EditorFor(m => m.TravelAuthoriztionModel.ProcurementProcessedDate, new { htmlAttributes = new { @class = "form-control fw-bold bg-white", @id = "ProcurementProcessedDate", @type = "date", @Value = Model.TravelAuthoriztionModel.ProcurementProcessedDate.ToString("yyyy-MM-dd"), @readonly = "readonly" } })
                            @Html.LabelFor(m => m.TravelAuthoriztionModel.ProcurementProcessedDate, htmlAttributes: new { @for = "ProcurementOfficerSignatureDate", @class = "fw-bold" })
                        </div>
                    </div>
                </div>
            }
        }
    }

    <div class="row">
        <div class="col-3">
            <button id="submitButton" type="button" onclick="printPage()" class="w-100" data-dismiss="modal">Print</button>
        </div>
    </div>
</div>

<table id="printTable">
    <tbody>
        <tr class="printRow">
            <td class="printCell" colspan="6">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Name) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.Name)</span>
            </td>
            <td class="printCell" colspan="6">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Title) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.Title)</span>
            </td>
        </tr>
        <tr class="printRow">
            <td class="printCell" colspan="6">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.DepartmentBudget) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.DepartmentBudget)</span>
            </td>
            <td class="printCell" colspan="6">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Email) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.Email)</span>
            </td>
        </tr>
        <tr class="printHeading">
            <th colspan="12">Destination(s) (City and State)</th>
        </tr>
        @for (int i = 0; i < Model.SFN52712Destinations.Count; i++)
        {
            <tr class="printRow">
                <td class="printCell" colspan="6">
                    @Html.LabelFor(m => m.SFN52712Destinations[@i].City) <br />
                    <span class="userInput">@Html.DisplayFor(m => m.SFN52712Destinations[@i].City)</span>
                </td>
                <td class="printCell" colspan="6">
                    @Html.LabelFor(m => m.SFN52712Destinations[@i].State) <br />
                    <span class="userInput">@Html.DisplayFor(m => m.SFN52712Destinations[@i].State)</span>
                </td>
            </tr>
        }
        <tr class="printRow">
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.PreferredDepartureDate) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.PreferredDepartureDate)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventStartDate) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.EventStartDate)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventStartTime) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.EventStartTime)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventEndDate) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.EventEndDate)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EventEndTime) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.EventEndTime)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.PreferredReturnDate) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.PreferredReturnDate)</span>
            </td>
        </tr>
        <tr class="printRow">
            <td class="printCell" colspan="12">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.PurposeOfTrip) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.PurposeOfTrip)</span>
            </td>
        </tr>
        <tr class="printRow">
            <td class="printCell" colspan="12">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.NumberOfPersons) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.NumberOfPersons)</span>
            </td>
        </tr>
        <tr class="printHeading">
            <th colspan="2" class="text-center">Transportation</th>
            <th colspan="2" class="text-center">Per Diem</th>
            <th colspan="2" class="text-center">Lodging</th>
            <th colspan="2" class="text-center">Registration</th>
            <th colspan="2" class="text-center">Rental Car/Taxi</th>
            <th colspan="2" class="text-center">Estimated Total Cost</th>
        </tr>
        <tr class="printRow">
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Transportation) <br />
                <span class="userInput">$@Html.DisplayFor(m => m.TravelAuthoriztionModel.Transportation)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.PerDiem) <br />
                <span class="userInput">$@Html.DisplayFor(m => m.TravelAuthoriztionModel.PerDiem)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Lodging) <br />
                <span class="userInput">$@Html.DisplayFor(m => m.TravelAuthoriztionModel.Lodging)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Registration) <br />
                <span class="userInput">$@Html.DisplayFor(m => m.TravelAuthoriztionModel.Registration)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.RentalCarTaxi) <br />
                <span class="userInput">$@Html.DisplayFor(m => m.TravelAuthoriztionModel.RentalCarTaxi)</span>
            </td>
            <td class="printCell" colspan="2">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.EstimatedTotalCost) <br />
                <span class="userInput">$@Html.DisplayFor(m => m.TravelAuthoriztionModel.EstimatedTotalCost)</span>
            </td>
        </tr>
        <tr class="printRow">
            <td class="printCell" colspan="12">
                @Html.LabelFor(m => m.TravelAuthoriztionModel.Comments) <br />
                <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.Comments)</span>
            </td>
        </tr>
        <tr class="printHeading">
            <th colspan="12">Signatures</th>
        </tr>
        @if (Model.TravelAuthoriztionModel.FormSubmitted == true)
        {
            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.SupervisorSignature.IsEmpty())
            {
                <tr class="printRow">
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.SupervisorSignature) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.SupervisorSignature)</span>
                    </td>
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.SupervisorSignatureDate) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.SupervisorSignatureDate)</span>
                    </td>
                </tr>
            }
            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DepartmentBudgetManagerSignature.IsEmpty())
            {
                <tr class="printRow">
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignature) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignature)</span>
                    </td>
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignatureDate) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DepartmentBudgetManagerSignatureDate)</span>
                    </td>
                </tr>
            }

            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DivisionChiefSignature.IsEmpty())
            {
                <tr class="printRow">
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DivisionChiefSignature) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DivisionChiefSignature)</span>
                    </td>
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DivisionChiefSignatureDate) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DivisionChiefSignatureDate)</span>
                    </td>
                </tr>
            }

            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DirectorofFinanceSignature.IsEmpty())
            {
                <tr class="printRow">
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorofFinanceSignature) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DirectorofFinanceSignature)</span>
                    </td>
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorofFinanceSignatureDate) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DirectorofFinanceSignatureDate)</span>
                    </td>
                </tr>
            }

            if (!Model.SFN52712Approvals.PersonTravelingSignature.IsEmpty() && !Model.SFN52712Approvals.DirectorSignature.IsEmpty())
            {
                <tr class="printRow">
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorSignature) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DirectorSignature)</span>
                    </td>
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.SFN52712Approvals.DirectorSignatureDate) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.SFN52712Approvals.DirectorSignatureDate)</span>
                    </td>
                </tr>
            }
            if (ViewBag.jobtitle == "Procurement Officer" || ViewBag.jobTitle == "Executive Assistant" || ViewBag.jobtitle == "HR Director")
            {
                <tr class="printRow">
                    <td class="printCell" colspan="6">
                        <h5>Administration Section</h5>
                    </td>
                </tr>
                <tr class="printRow">
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.TravelAuthoriztionModel.ProcurementProcessing) <br />
                        @if (Model.TravelAuthoriztionModel.ProcurementProcessing == true)
                        {
                            <input type="checkbox" id="printCheck" style="appearance: auto; background-color: transparent; accent-color: #29479d; width:auto; height: auto" checked="checked"  />
                        }
                        else
                        {
                            <input type="checkbox" id="printCheck" style="appearance: auto; background-color: transparent; width:auto; height: auto" />
                        }                        
                    </td>
                    <td class="printCell" colspan="6">
                        @Html.LabelFor(m => m.TravelAuthoriztionModel.ProcurementProcessedDate) <br />
                        <span class="userInput">@Html.DisplayFor(m => m.TravelAuthoriztionModel.ProcurementProcessedDate)</span>
                    </td>
                </tr>
            }
        }
</table>



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <partial name="_ValidationScriptsPartial" />

        <script type="text/javascript">
        numDestItems = 1;
        $(function () {
            $("[currencymask]").inputmask({ alias: "currency", groupSeparator: "," });
        });

        $("#otherTravelMethod").html("@ViewBag.OtherMethodofTravel");

        window.onload = function () {
            otherMethod();

            var textarea = document.querySelectorAll('textarea');
            textarea.forEach((thisarea) => { thisarea.style.cssText = 'height: ' + (thisarea.scrollHeight + 2) + 'px'; });
        };

        function printPage() {
            window.print();
        };

        function otherMethod() {
            console.log("changed" + $('#travelMethod').val());
            if ($('#travelMethod').val() == "Other (Explain)") {
                $('#othersection').show();
            } else {
                $('#othersection').hide();
            }

            if ($('#travelMethod').val() == "Commercial Air") {
                $('#flightsection').show();
            } else {
                $('#flightsection').hide();
            }
            console.log($('#otherTravelMethod').val());
            console.log($('#otherTravelMethod').val());
        }
        </script>
        <style>
            #flightsection, #othersection {
                display: none;
            }
        </style>
    }

